ROM Bank #0 (HOME):
  SECTION: $0000-$0000 ($0001 bytes)
  SECTION: $0008-$0008 ($0001 bytes)
  SECTION: $0010-$0010 ($0001 bytes)
  SECTION: $0018-$0018 ($0001 bytes)
  SECTION: $0020-$0020 ($0001 bytes)
  SECTION: $0028-$0028 ($0001 bytes)
  SECTION: $0030-$0030 ($0001 bytes)
  SECTION: $0038-$0038 ($0001 bytes)
  SECTION: $0040-$0080 ($0041 bytes)
           $0075 = wait_vbl
  SECTION: $0100-$014F ($0050 bytes)
  SECTION: $0150-$01DE ($008F bytes)
           $0150 = StartPoint
           $0198 = Reset
           $01B6 = irq_set_JOY
           $01BD = CPU_fast
           $01A7 = irq_set_LCD
           $01C4 = CPU_slow
           $01A2 = irq_set_VBL
           $01AC = irq_set_TIM
           $01B1 = irq_set_SIO
  SECTION: $01DF-$0CAE ($0AD0 bytes)
           $01DF = ClearSprites
           $01F1 = PrepareSprites
           $021A = Main.next_spr_number
           $0777 = Main.next_spr_number2
           $0209 = Main
  SECTION: $0081-$009E ($001E bytes)
           $0093 = memcopy_inc
           $008A = memcopy
           $0081 = memset
           $0089 = memset_rand
  SECTION: $009F-$00E4 ($0046 bytes)
           $00B1 = div_u8u8u8
           $009F = mul_u8u8u16
           $00C4 = div_s8s8s8
  SECTION: $0CAF-$0CE4 ($0036 bytes)
           $0CAF = scan_keys
  SECTION: $0CE5-$0D37 ($0053 bytes)
           $0D07 = rom_bank_set
           $0D17 = rom_bank_push_set
           $0D37 = ___long_call._jump_to_function
           $0CEF = rom_bank_pop
           $0CE5 = rom_handler_init
           $0D2B = ___long_call
           $0D02 = rom_bank_push
  SECTION: $0D38-$0D94 ($005D bytes)
           $0D38 = wait_ly
           $0D5C = vram_copy
           $0D3F = wait_frames
           $0D79 = vram_copy_tiles
           $0D6B = vram_memset
           $0D46 = screen_off
           $0D55 = wait_screen_blank
  SECTION: $0D95-$0DF0 ($005C bytes)
           $0D95 = sprite_get_base_pointer
           $0DE9 = __refresh_OAM_end
           $0DE1 = __refresh_OAM
           $0DAC = sprite_set_params
           $0DEE = refresh_custom_OAM
           $0DB4 = spr_set_palette
           $0DA5 = sprite_set_tile
           $0DD4 = init_OAM
           $0D9E = sprite_set_xy
           $0DE9 = refresh_OAM
  SECTION: $0DF1-$0E28 ($0038 bytes)
           $0E11 = bg_set_tile_wrap
           $0DF1 = bg_set_palette
           $0E1B = bg_set_tile
    SLACK: $322A bytes

ROM Bank #1:
  SECTION: $4000-$45FF ($0600 bytes)
           $4000 = LCD_INT_HANDLER_0
           $4004 = LCD_INT_HANDLER_1
           $4009 = LCD_INT_HANDLER_2
           $400F = LCD_INT_HANDLER_3
           $4016 = LCD_INT_HANDLER_4
           $401E = LCD_INT_HANDLER_5
           $4027 = LCD_INT_HANDLER_6
           $4031 = LCD_INT_HANDLER_7
           $403C = LCD_INT_HANDLER_8
           $4048 = LCD_INT_HANDLER_9
           $4055 = LCD_INT_HANDLER_10
           $4063 = LCD_INT_HANDLER_11
           $4072 = LCD_INT_HANDLER_12
           $4082 = LCD_INT_HANDLER_13
           $4093 = LCD_INT_HANDLER_14
           $40A5 = LCD_INT_HANDLER_15
           $40B8 = LCD_INT_HANDLER_16
           $40CC = LCD_INT_HANDLER_17
           $40E1 = LCD_INT_HANDLER_18
           $40F7 = LCD_INT_HANDLER_19
           $410E = LCD_INT_HANDLER_20
           $4126 = LCD_INT_HANDLER_21
           $413F = LCD_INT_HANDLER_22
           $4159 = LCD_INT_HANDLER_23
           $4174 = LCD_INT_HANDLER_24
           $4190 = LCD_INT_HANDLER_25
           $41AD = LCD_INT_HANDLER_26
           $41CB = LCD_INT_HANDLER_27
           $41EA = LCD_INT_HANDLER_28
           $420A = LCD_INT_HANDLER_29
           $422B = LCD_INT_HANDLER_30
           $424D = LCD_INT_HANDLER_31
           $4270 = LCD_INT_HANDLER_GBC_0
           $427D = LCD_INT_HANDLER_GBC_1
           $428B = LCD_INT_HANDLER_GBC_2
           $429A = LCD_INT_HANDLER_GBC_3
           $42AA = LCD_INT_HANDLER_GBC_4
           $42BB = LCD_INT_HANDLER_GBC_5
           $42CD = LCD_INT_HANDLER_GBC_6
           $42E0 = LCD_INT_HANDLER_GBC_7
           $42F4 = LCD_INT_HANDLER_GBC_8
           $4309 = LCD_INT_HANDLER_GBC_9
           $431F = LCD_INT_HANDLER_GBC_10
           $4336 = LCD_INT_HANDLER_GBC_11
           $434E = LCD_INT_HANDLER_GBC_12
           $4367 = LCD_INT_HANDLER_GBC_13
           $4381 = LCD_INT_HANDLER_GBC_14
           $439C = LCD_INT_HANDLER_GBC_15
           $43B8 = LCD_INT_HANDLER_GBC_16
           $43D5 = LCD_INT_HANDLER_GBC_17
           $43F3 = LCD_INT_HANDLER_GBC_18
           $4412 = LCD_INT_HANDLER_GBC_19
           $4432 = LCD_INT_HANDLER_GBC_20
           $4453 = LCD_INT_HANDLER_GBC_21
           $4475 = LCD_INT_HANDLER_GBC_22
           $4498 = LCD_INT_HANDLER_GBC_23
           $44BC = LCD_INT_HANDLER_GBC_24
           $44E1 = LCD_INT_HANDLER_GBC_25
           $4507 = LCD_INT_HANDLER_GBC_26
           $452E = LCD_INT_HANDLER_GBC_27
           $4556 = LCD_INT_HANDLER_GBC_28
           $457F = LCD_INT_HANDLER_GBC_29
           $45A9 = LCD_INT_HANDLER_GBC_30
           $45D4 = LCD_INT_HANDLER_GBC_31
    SLACK: $3A00 bytes

WRAM Bank #0:
  SECTION: $C0A0-$C0AC ($000D bytes)
           $C0A2 = _is_vbl_flag
           $C0A7 = TIM_handler
           $C0A9 = SIO_handler
           $C0AB = JOY_handler
           $C0A3 = VBL_handler
           $C0A0 = Init_Reg_A
           $C0A1 = Init_Reg_B
           $C0A5 = LCD_handler
  SECTION: $CE00-$CFFF ($0200 bytes)
           $D000 = StackTop
  SECTION: $C0AD-$C0CD ($0021 bytes)
           $C0CD = rom_position
           $C0AD = rom_stack
  SECTION: $C000-$C09F ($00A0 bytes)
           $C000 = OAM_Copy
    SLACK: $0D32 bytes

WRAM Bank #1:
  EMPTY

WRAM Bank #2:
  EMPTY

WRAM Bank #3:
  EMPTY

WRAM Bank #4:
  EMPTY

WRAM Bank #5:
  EMPTY

WRAM Bank #6:
  EMPTY

WRAM Bank #7:
  EMPTY

VRAM Bank #0:
  EMPTY

VRAM Bank #1:
  EMPTY

HRAM:
  SECTION: $FF88-$FF8A ($0003 bytes)
           $FF89 = joy_held
           $FF88 = _joy_old
           $FF8A = joy_pressed
  SECTION: $FF80-$FF87 ($0008 bytes)
           $FF80 = refresh_OAM_HRAM
    SLACK: $0074 bytes

SRAM Bank #0:
  EMPTY

SRAM Bank #1:
  EMPTY

SRAM Bank #2:
  EMPTY

SRAM Bank #3:
  EMPTY

