ROM Bank #0 (HOME):
  SECTION: $0000-$0000 ($0001 bytes)
  SECTION: $0008-$0008 ($0001 bytes)
  SECTION: $0010-$0010 ($0001 bytes)
  SECTION: $0018-$0018 ($0001 bytes)
  SECTION: $0020-$0020 ($0001 bytes)
  SECTION: $0028-$0028 ($0001 bytes)
  SECTION: $0030-$0030 ($0001 bytes)
  SECTION: $0038-$0038 ($0001 bytes)
  SECTION: $0040-$0080 ($0041 bytes)
           $0075 = wait_vbl
  SECTION: $0100-$014F ($0050 bytes)
  SECTION: $0150-$01DE ($008F bytes)
           $0150 = StartPoint
           $0198 = Reset
           $01B6 = irq_set_JOY
           $01BD = CPU_fast
           $01A7 = irq_set_LCD
           $01C4 = CPU_slow
           $01A2 = irq_set_VBL
           $01AC = irq_set_TIM
           $01B1 = irq_set_SIO
  SECTION: $01DF-$0770 ($0592 bytes)
           $01DF = ClearSprites
           $01F1 = PrepareSprites
           $021A = Main.next_spr_number
           $0209 = Main
  SECTION: $0081-$009E ($001E bytes)
           $0093 = memcopy_inc
           $008A = memcopy
           $0081 = memset
           $0089 = memset_rand
  SECTION: $009F-$00E4 ($0046 bytes)
           $00B1 = div_u8u8u8
           $009F = mul_u8u8u16
           $00C4 = div_s8s8s8
  SECTION: $0771-$07A6 ($0036 bytes)
           $0771 = scan_keys
  SECTION: $07A7-$07F9 ($0053 bytes)
           $07C9 = rom_bank_set
           $07D9 = rom_bank_push_set
           $07F9 = ___long_call._jump_to_function
           $07B1 = rom_bank_pop
           $07A7 = rom_handler_init
           $07ED = ___long_call
           $07C4 = rom_bank_push
  SECTION: $07FA-$0856 ($005D bytes)
           $07FA = wait_ly
           $081E = vram_copy
           $0801 = wait_frames
           $083B = vram_copy_tiles
           $082D = vram_memset
           $0808 = screen_off
           $0817 = wait_screen_blank
  SECTION: $0857-$08B2 ($005C bytes)
           $0857 = sprite_get_base_pointer
           $08AB = __refresh_OAM_end
           $08A3 = __refresh_OAM
           $086E = sprite_set_params
           $08B0 = refresh_custom_OAM
           $0876 = spr_set_palette
           $0867 = sprite_set_tile
           $0896 = init_OAM
           $0860 = sprite_set_xy
           $08AB = refresh_OAM
  SECTION: $08B3-$08EA ($0038 bytes)
           $08D3 = bg_set_tile_wrap
           $08B3 = bg_set_palette
           $08DD = bg_set_tile
    SLACK: $3768 bytes

ROM Bank #1:
  SECTION: $4000-$428F ($0290 bytes)
           $4000 = LCD_INT_HANDLER_0
           $4005 = LCD_INT_HANDLER_1
           $400B = LCD_INT_HANDLER_2
           $4012 = LCD_INT_HANDLER_3
           $401A = LCD_INT_HANDLER_4
           $4023 = LCD_INT_HANDLER_5
           $402D = LCD_INT_HANDLER_6
           $4038 = LCD_INT_HANDLER_7
           $4044 = LCD_INT_HANDLER_8
           $4051 = LCD_INT_HANDLER_9
           $405F = LCD_INT_HANDLER_10
           $406E = LCD_INT_HANDLER_11
           $407E = LCD_INT_HANDLER_12
           $408F = LCD_INT_HANDLER_13
           $40A1 = LCD_INT_HANDLER_14
           $40B4 = LCD_INT_HANDLER_15
           $40C8 = LCD_INT_HANDLER_16
           $40DD = LCD_INT_HANDLER_17
           $40F3 = LCD_INT_HANDLER_18
           $410A = LCD_INT_HANDLER_19
           $4122 = LCD_INT_HANDLER_20
           $413B = LCD_INT_HANDLER_21
           $4155 = LCD_INT_HANDLER_22
           $4170 = LCD_INT_HANDLER_23
           $418C = LCD_INT_HANDLER_24
           $41A9 = LCD_INT_HANDLER_25
           $41C7 = LCD_INT_HANDLER_26
           $41E6 = LCD_INT_HANDLER_27
           $4206 = LCD_INT_HANDLER_28
           $4227 = LCD_INT_HANDLER_29
           $4249 = LCD_INT_HANDLER_30
           $426C = LCD_INT_HANDLER_31
    SLACK: $3D70 bytes

WRAM Bank #0:
  SECTION: $C0A0-$C0AC ($000D bytes)
           $C0A2 = _is_vbl_flag
           $C0A7 = TIM_handler
           $C0A9 = SIO_handler
           $C0AB = JOY_handler
           $C0A3 = VBL_handler
           $C0A0 = Init_Reg_A
           $C0A1 = Init_Reg_B
           $C0A5 = LCD_handler
  SECTION: $CE00-$CFFF ($0200 bytes)
           $D000 = StackTop
  SECTION: $C0AD-$C0CD ($0021 bytes)
           $C0CD = rom_position
           $C0AD = rom_stack
  SECTION: $C000-$C09F ($00A0 bytes)
           $C000 = OAM_Copy
    SLACK: $0D32 bytes

WRAM Bank #1:
  EMPTY

WRAM Bank #2:
  EMPTY

WRAM Bank #3:
  EMPTY

WRAM Bank #4:
  EMPTY

WRAM Bank #5:
  EMPTY

WRAM Bank #6:
  EMPTY

WRAM Bank #7:
  EMPTY

VRAM Bank #0:
  EMPTY

VRAM Bank #1:
  EMPTY

HRAM:
  SECTION: $FF88-$FF8A ($0003 bytes)
           $FF89 = joy_held
           $FF88 = _joy_old
           $FF8A = joy_pressed
  SECTION: $FF80-$FF87 ($0008 bytes)
           $FF80 = refresh_OAM_HRAM
    SLACK: $0074 bytes

SRAM Bank #0:
  EMPTY

SRAM Bank #1:
  EMPTY

SRAM Bank #2:
  EMPTY

SRAM Bank #3:
  EMPTY

