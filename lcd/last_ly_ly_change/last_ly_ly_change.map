ROM Bank #0 (HOME):
  SECTION: $0000-$0000 ($0001 bytes)
  SECTION: $0008-$0008 ($0001 bytes)
  SECTION: $0010-$0010 ($0001 bytes)
  SECTION: $0018-$0018 ($0001 bytes)
  SECTION: $0020-$0020 ($0001 bytes)
  SECTION: $0028-$0028 ($0001 bytes)
  SECTION: $0030-$0030 ($0001 bytes)
  SECTION: $0038-$0038 ($0001 bytes)
  SECTION: $0040-$0080 ($0041 bytes)
           $0075 = wait_vbl
  SECTION: $0100-$014F ($0050 bytes)
  SECTION: $0150-$01DE ($008F bytes)
           $0150 = StartPoint
           $0198 = Reset
           $01B6 = irq_set_JOY
           $01BD = CPU_fast
           $01A7 = irq_set_LCD
           $01C4 = CPU_slow
           $01A2 = irq_set_VBL
           $01AC = irq_set_TIM
           $01B1 = irq_set_SIO
  SECTION: $01DF-$0613 ($0435 bytes)
           $0201 = Main.repeat_all
           $01DF = Main
  SECTION: $0081-$009E ($001E bytes)
           $0093 = memcopy_inc
           $008A = memcopy
           $0081 = memset
           $0089 = memset_rand
  SECTION: $009F-$00E4 ($0046 bytes)
           $00B1 = div_u8u8u8
           $009F = mul_u8u8u16
           $00C4 = div_s8s8s8
  SECTION: $0614-$0649 ($0036 bytes)
           $0614 = scan_keys
  SECTION: $064A-$069C ($0053 bytes)
           $066C = rom_bank_set
           $067C = rom_bank_push_set
           $069C = ___long_call._jump_to_function
           $0654 = rom_bank_pop
           $064A = rom_handler_init
           $0690 = ___long_call
           $0667 = rom_bank_push
  SECTION: $069D-$06F9 ($005D bytes)
           $069D = wait_ly
           $06C1 = vram_copy
           $06A4 = wait_frames
           $06DE = vram_copy_tiles
           $06D0 = vram_memset
           $06AB = screen_off
           $06BA = wait_screen_blank
  SECTION: $06FA-$0755 ($005C bytes)
           $06FA = sprite_get_base_pointer
           $074E = __refresh_OAM_end
           $0746 = __refresh_OAM
           $0711 = sprite_set_params
           $0753 = refresh_custom_OAM
           $0719 = spr_set_palette
           $070A = sprite_set_tile
           $0739 = init_OAM
           $0703 = sprite_set_xy
           $074E = refresh_OAM
  SECTION: $0756-$078D ($0038 bytes)
           $0776 = bg_set_tile_wrap
           $0756 = bg_set_palette
           $0780 = bg_set_tile
    SLACK: $38C5 bytes

ROM Bank #1:
  SECTION: $4000-$482F ($0830 bytes)
           $4000 = VBL_INT_HANDLER_0
           $402A = VBL_INT_HANDLER_1
           $4055 = VBL_INT_HANDLER_2
           $4081 = VBL_INT_HANDLER_3
           $40AE = VBL_INT_HANDLER_4
           $40DC = VBL_INT_HANDLER_5
           $410B = VBL_INT_HANDLER_6
           $413B = VBL_INT_HANDLER_7
           $416C = VBL_INT_HANDLER_8
           $419E = VBL_INT_HANDLER_9
           $41D1 = VBL_INT_HANDLER_10
           $4205 = VBL_INT_HANDLER_11
           $423A = VBL_INT_HANDLER_12
           $4270 = VBL_INT_HANDLER_13
           $42A7 = VBL_INT_HANDLER_14
           $42DF = VBL_INT_HANDLER_15
           $4318 = VBL_INT_HANDLER_GBC_0
           $4362 = VBL_INT_HANDLER_GBC_1
           $43AD = VBL_INT_HANDLER_GBC_2
           $43F9 = VBL_INT_HANDLER_GBC_3
           $4446 = VBL_INT_HANDLER_GBC_4
           $4494 = VBL_INT_HANDLER_GBC_5
           $44E3 = VBL_INT_HANDLER_GBC_6
           $4533 = VBL_INT_HANDLER_GBC_7
           $4584 = VBL_INT_HANDLER_GBC_8
           $45D6 = VBL_INT_HANDLER_GBC_9
           $4629 = VBL_INT_HANDLER_GBC_10
           $467D = VBL_INT_HANDLER_GBC_11
           $46D2 = VBL_INT_HANDLER_GBC_12
           $4728 = VBL_INT_HANDLER_GBC_13
           $477F = VBL_INT_HANDLER_GBC_14
           $47D7 = VBL_INT_HANDLER_GBC_15
    SLACK: $37D0 bytes

WRAM Bank #0:
  SECTION: $C0A0-$C0AC ($000D bytes)
           $C0A2 = _is_vbl_flag
           $C0A5 = LCD_handler
           $C0A7 = TIM_handler
           $C0A9 = SIO_handler
           $C0AB = JOY_handler
           $C0A3 = VBL_handler
           $C0A0 = Init_Reg_A
           $C0A1 = Init_Reg_B
  SECTION: $CE00-$CFFF ($0200 bytes)
           $D000 = StackTop
  SECTION: $C0AD-$C0AF ($0003 bytes)
           $C0AE = sram_ptr
           $C0AD = repeat_loop
  SECTION: $C0B0-$C0D0 ($0021 bytes)
           $C0D0 = rom_position
           $C0B0 = rom_stack
  SECTION: $C000-$C09F ($00A0 bytes)
           $C000 = OAM_Copy
    SLACK: $0D2F bytes

WRAM Bank #1:
  EMPTY

WRAM Bank #2:
  EMPTY

WRAM Bank #3:
  EMPTY

WRAM Bank #4:
  EMPTY

WRAM Bank #5:
  EMPTY

WRAM Bank #6:
  EMPTY

WRAM Bank #7:
  EMPTY

VRAM Bank #0:
  EMPTY

VRAM Bank #1:
  EMPTY

HRAM:
  SECTION: $FF88-$FF8A ($0003 bytes)
           $FF89 = joy_held
           $FF88 = _joy_old
           $FF8A = joy_pressed
  SECTION: $FF80-$FF87 ($0008 bytes)
           $FF80 = refresh_OAM_HRAM
    SLACK: $0074 bytes

SRAM Bank #0:
  EMPTY

SRAM Bank #1:
  EMPTY

SRAM Bank #2:
  EMPTY

SRAM Bank #3:
  EMPTY

