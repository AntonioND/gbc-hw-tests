ROM Bank #0 (HOME):
  SECTION: $0000-$0000 ($0001 bytes)
  SECTION: $0008-$0008 ($0001 bytes)
  SECTION: $0010-$0010 ($0001 bytes)
  SECTION: $0018-$0018 ($0001 bytes)
  SECTION: $0020-$0020 ($0001 bytes)
  SECTION: $0028-$0028 ($0001 bytes)
  SECTION: $0030-$0030 ($0001 bytes)
  SECTION: $0038-$0038 ($0001 bytes)
  SECTION: $0040-$0080 ($0041 bytes)
           $0075 = wait_vbl
  SECTION: $0100-$014F ($0050 bytes)
  SECTION: $0150-$01DE ($008F bytes)
           $0150 = StartPoint
           $0198 = Reset
           $01B6 = irq_set_JOY
           $01BD = CPU_fast
           $01A7 = irq_set_LCD
           $01C4 = CPU_slow
           $01A2 = irq_set_VBL
           $01AC = irq_set_TIM
           $01B1 = irq_set_SIO
  SECTION: $01DF-$0F2C ($0D4E bytes)
           $01DF = ClearSprites
           $01EF = PrepareSprites
           $021A = Main.next_spr_number
           $0779 = Main.next_spr_number2
           $0207 = Main
  SECTION: $0081-$009E ($001E bytes)
           $0093 = memcopy_inc
           $008A = memcopy
           $0081 = memset
           $0089 = memset_rand
  SECTION: $009F-$00E4 ($0046 bytes)
           $00B1 = div_u8u8u8
           $009F = mul_u8u8u16
           $00C4 = div_s8s8s8
  SECTION: $0F2D-$0F62 ($0036 bytes)
           $0F2D = scan_keys
  SECTION: $0F63-$0FB5 ($0053 bytes)
           $0F85 = rom_bank_set
           $0F95 = rom_bank_push_set
           $0FB5 = ___long_call._jump_to_function
           $0F6D = rom_bank_pop
           $0F63 = rom_handler_init
           $0FA9 = ___long_call
           $0F80 = rom_bank_push
  SECTION: $0FB6-$1012 ($005D bytes)
           $0FB6 = wait_ly
           $0FDA = vram_copy
           $0FBD = wait_frames
           $0FF7 = vram_copy_tiles
           $0FE9 = vram_memset
           $0FC4 = screen_off
           $0FD3 = wait_screen_blank
  SECTION: $1013-$106E ($005C bytes)
           $1013 = sprite_get_base_pointer
           $1067 = __refresh_OAM_end
           $105F = __refresh_OAM
           $102A = sprite_set_params
           $106C = refresh_custom_OAM
           $1032 = spr_set_palette
           $1023 = sprite_set_tile
           $1052 = init_OAM
           $101C = sprite_set_xy
           $1067 = refresh_OAM
  SECTION: $106F-$10A6 ($0038 bytes)
           $108F = bg_set_tile_wrap
           $106F = bg_set_palette
           $1099 = bg_set_tile
    SLACK: $2FAC bytes

ROM Bank #1:
  SECTION: $4000-$4AC7 ($0AC8 bytes)
           $4000 = LCD_INT_HANDLER_0
           $4013 = LCD_INT_HANDLER_1
           $4027 = LCD_INT_HANDLER_2
           $403C = LCD_INT_HANDLER_3
           $4052 = LCD_INT_HANDLER_4
           $4069 = LCD_INT_HANDLER_5
           $4081 = LCD_INT_HANDLER_6
           $409A = LCD_INT_HANDLER_7
           $40B4 = LCD_INT_HANDLER_8
           $40CF = LCD_INT_HANDLER_9
           $40EB = LCD_INT_HANDLER_10
           $4108 = LCD_INT_HANDLER_11
           $4126 = LCD_INT_HANDLER_12
           $4145 = LCD_INT_HANDLER_13
           $4165 = LCD_INT_HANDLER_14
           $4186 = LCD_INT_HANDLER_15
           $41A8 = LCD_INT_HANDLER_16
           $41CB = LCD_INT_HANDLER_17
           $41EF = LCD_INT_HANDLER_18
           $4214 = LCD_INT_HANDLER_19
           $423A = LCD_INT_HANDLER_20
           $4261 = LCD_INT_HANDLER_21
           $4289 = LCD_INT_HANDLER_22
           $42B2 = LCD_INT_HANDLER_23
           $42DC = LCD_INT_HANDLER_24
           $4307 = LCD_INT_HANDLER_25
           $4333 = LCD_INT_HANDLER_26
           $4360 = LCD_INT_HANDLER_27
           $438E = LCD_INT_HANDLER_28
           $43BD = LCD_INT_HANDLER_29
           $43ED = LCD_INT_HANDLER_30
           $441E = LCD_INT_HANDLER_31
           $4450 = LCD_INT_HANDLER_GBC_0
           $445B = LCD_INT_HANDLER_GBC_1
           $4467 = LCD_INT_HANDLER_GBC_2
           $4474 = LCD_INT_HANDLER_GBC_3
           $4482 = LCD_INT_HANDLER_GBC_4
           $4491 = LCD_INT_HANDLER_GBC_5
           $44A1 = LCD_INT_HANDLER_GBC_6
           $44B2 = LCD_INT_HANDLER_GBC_7
           $44C4 = LCD_INT_HANDLER_GBC_8
           $44D7 = LCD_INT_HANDLER_GBC_9
           $44EB = LCD_INT_HANDLER_GBC_10
           $4500 = LCD_INT_HANDLER_GBC_11
           $4516 = LCD_INT_HANDLER_GBC_12
           $452D = LCD_INT_HANDLER_GBC_13
           $4545 = LCD_INT_HANDLER_GBC_14
           $455E = LCD_INT_HANDLER_GBC_15
           $4578 = LCD_INT_HANDLER_GBC_16
           $4593 = LCD_INT_HANDLER_GBC_17
           $45AF = LCD_INT_HANDLER_GBC_18
           $45CC = LCD_INT_HANDLER_GBC_19
           $45EA = LCD_INT_HANDLER_GBC_20
           $4609 = LCD_INT_HANDLER_GBC_21
           $4629 = LCD_INT_HANDLER_GBC_22
           $464A = LCD_INT_HANDLER_GBC_23
           $466C = LCD_INT_HANDLER_GBC_24
           $468F = LCD_INT_HANDLER_GBC_25
           $46B3 = LCD_INT_HANDLER_GBC_26
           $46D8 = LCD_INT_HANDLER_GBC_27
           $46FE = LCD_INT_HANDLER_GBC_28
           $4725 = LCD_INT_HANDLER_GBC_29
           $474D = LCD_INT_HANDLER_GBC_30
           $4776 = LCD_INT_HANDLER_GBC_31
           $47A0 = LCD_INT_HANDLER_GBC_32
           $47CB = LCD_INT_HANDLER_GBC_33
           $47F7 = LCD_INT_HANDLER_GBC_34
           $4824 = LCD_INT_HANDLER_GBC_35
           $4852 = LCD_INT_HANDLER_GBC_36
           $4881 = LCD_INT_HANDLER_GBC_37
           $48B1 = LCD_INT_HANDLER_GBC_38
           $48E2 = LCD_INT_HANDLER_GBC_39
           $4914 = LCD_INT_HANDLER_GBC_40
           $4947 = LCD_INT_HANDLER_GBC_41
           $497B = LCD_INT_HANDLER_GBC_42
           $49B0 = LCD_INT_HANDLER_GBC_43
           $49E6 = LCD_INT_HANDLER_GBC_44
           $4A1D = LCD_INT_HANDLER_GBC_45
           $4A55 = LCD_INT_HANDLER_GBC_46
           $4A8E = LCD_INT_HANDLER_GBC_47
    SLACK: $3538 bytes

WRAM Bank #0:
  SECTION: $C0A0-$C0AC ($000D bytes)
           $C0A2 = _is_vbl_flag
           $C0A7 = TIM_handler
           $C0A9 = SIO_handler
           $C0AB = JOY_handler
           $C0A3 = VBL_handler
           $C0A0 = Init_Reg_A
           $C0A1 = Init_Reg_B
           $C0A5 = LCD_handler
  SECTION: $CE00-$CFFF ($0200 bytes)
           $D000 = StackTop
  SECTION: $C0AD-$C0CD ($0021 bytes)
           $C0CD = rom_position
           $C0AD = rom_stack
  SECTION: $C000-$C09F ($00A0 bytes)
           $C000 = OAM_Copy
    SLACK: $0D32 bytes

WRAM Bank #1:
  EMPTY

WRAM Bank #2:
  EMPTY

WRAM Bank #3:
  EMPTY

WRAM Bank #4:
  EMPTY

WRAM Bank #5:
  EMPTY

WRAM Bank #6:
  EMPTY

WRAM Bank #7:
  EMPTY

VRAM Bank #0:
  EMPTY

VRAM Bank #1:
  EMPTY

HRAM:
  SECTION: $FF88-$FF8A ($0003 bytes)
           $FF89 = joy_held
           $FF88 = _joy_old
           $FF8A = joy_pressed
  SECTION: $FF80-$FF87 ($0008 bytes)
           $FF80 = refresh_OAM_HRAM
    SLACK: $0074 bytes

SRAM Bank #0:
  EMPTY

SRAM Bank #1:
  EMPTY

SRAM Bank #2:
  EMPTY

SRAM Bank #3:
  EMPTY

